// <auto-generated />
using System;
using Escola.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Escola.Migrations
{
    [DbContext(typeof(EscolaDataContext))]
    [Migration("20231019222602_CriacaoDoBanco")]
    partial class CriacaoDoBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Escola.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataExclusao");

                    b.Property<DateTime?>("DataInclusao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataInclusao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataMatricula");

                    b.Property<DateTime?>("DataRecisao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataRecisao");

                    b.Property<DateTime?>("DataUltAtu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataUltAtu")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Ra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)")
                        .HasColumnName("Ra");

                    b.Property<int?>("UsuExclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuInclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuUltAtuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("UsuExclusaoId");

                    b.HasIndex("UsuInclusaoId");

                    b.HasIndex("UsuUltAtuId");

                    b.HasIndex(new[] { "Ra" }, "IDX_Alunos_Ra")
                        .IsUnique();

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR(8)")
                        .HasColumnName("Cep");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Complemento");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataExclusao");

                    b.Property<DateTime?>("DataInclusao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataInclusao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DataUltAtu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataUltAtu")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Logradouro");

                    b.Property<int>("Numero")
                        .HasColumnType("INT")
                        .HasColumnName("Numero");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuExclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuInclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuUltAtuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId");

                    b.HasIndex("UsuExclusaoId");

                    b.HasIndex("UsuInclusaoId");

                    b.HasIndex("UsuUltAtuId");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("Cpf");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataExclusao");

                    b.Property<DateTime?>("DataInclusao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataInclusao")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataNascimento");

                    b.Property<DateTime?>("DataUltAtu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataUltAtu")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("Telefone");

                    b.Property<int?>("UsuExclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuInclusaoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuUltAtuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuExclusaoId");

                    b.HasIndex("UsuInclusaoId");

                    b.HasIndex("UsuUltAtuId");

                    b.HasIndex(new[] { "Cpf" }, "IDX_Pessoas_Cpf")
                        .IsUnique();

                    b.ToTable("Pessoas", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Email");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR(8)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Escola.Models.Aluno", b =>
                {
                    b.HasOne("Escola.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Alunos_Pessoas_PessoaId");

                    b.HasOne("Escola.Models.Usuario", "UsuExclusao")
                        .WithMany()
                        .HasForeignKey("UsuExclusaoId")
                        .HasConstraintName("FK_Alunos_Usuarios_UsuExclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuInclusao")
                        .WithMany()
                        .HasForeignKey("UsuInclusaoId")
                        .HasConstraintName("FK_Alunos_Usuarios_UsuInclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuUltAtu")
                        .WithMany()
                        .HasForeignKey("UsuUltAtuId")
                        .HasConstraintName("FK_Alunos_Usuarios_UsuUltAtuId");

                    b.Navigation("Pessoa");

                    b.Navigation("UsuExclusao");

                    b.Navigation("UsuInclusao");

                    b.Navigation("UsuUltAtu");
                });

            modelBuilder.Entity("Escola.Models.Endereco", b =>
                {
                    b.HasOne("Escola.Models.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Enderecos_Pessoas_PessoaId");

                    b.HasOne("Escola.Models.Usuario", "UsuExclusao")
                        .WithMany()
                        .HasForeignKey("UsuExclusaoId")
                        .HasConstraintName("FK_Enderecos_Usuarios_UsuExclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuInclusao")
                        .WithMany()
                        .HasForeignKey("UsuInclusaoId")
                        .HasConstraintName("FK_Enderecos_Usuarios_UsuInclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuUltAtu")
                        .WithMany()
                        .HasForeignKey("UsuUltAtuId")
                        .HasConstraintName("FK_Enderecos_Usuarios_UsuUltAtuId");

                    b.Navigation("Pessoa");

                    b.Navigation("UsuExclusao");

                    b.Navigation("UsuInclusao");

                    b.Navigation("UsuUltAtu");
                });

            modelBuilder.Entity("Escola.Models.Pessoa", b =>
                {
                    b.HasOne("Escola.Models.Usuario", "UsuExclusao")
                        .WithMany()
                        .HasForeignKey("UsuExclusaoId")
                        .HasConstraintName("FK_Pessoas_Usuarios_UsuExclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuInclusao")
                        .WithMany()
                        .HasForeignKey("UsuInclusaoId")
                        .HasConstraintName("FK_Pessoas_Usuarios_UsuInclusaoId");

                    b.HasOne("Escola.Models.Usuario", "UsuUltAtu")
                        .WithMany()
                        .HasForeignKey("UsuUltAtuId")
                        .HasConstraintName("FK_Pessoas_Usuarios_UsuUltAtuId");

                    b.Navigation("UsuExclusao");

                    b.Navigation("UsuInclusao");

                    b.Navigation("UsuUltAtu");
                });
#pragma warning restore 612, 618
        }
    }
}
